{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Entornos de desarrollo Mkdocs de todas las actividades realizadas en la asignatura.","title":"Home"},{"location":"#entornos-de-desarrollo","text":"Mkdocs de todas las actividades realizadas en la asignatura.","title":"Entornos de desarrollo"},{"location":"Ejercicios1/","text":"EJERCICIOS 1 Define \"Ciclo de vida del software\". Es la disciplina que estudia los principios y m\u00e9todos de desarrollo y mantenimiento de software. Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas. An\u00e1lisis. Se determinan las necesidades del cliente y se especifican los requisitos que debe cumplir el software. Dise\u00f1o. Se organiza el sistema en elementos componentes que pueden desarrollarse por separado. Codificaci\u00f3n. Se escribe el c\u00f3digo fuente de cada componente. Pruebas. Se intenta forzar el programa a funcionar mal para descubrir los defectos. Mantenimiento. Durante la explotaci\u00f3n del sistema, es necesario realizar cambios ocasionales, para ello hay que rehacer parte del trabajo previo. Explica brevemente en qu\u00e9 consiste el modelo en cascada cuando hablamos de desarrollo de sofware. Es un modelo en el que las fases se realizan en el orden indicado, por lo que al terminar una, se pasa a la siguiente. Ventajas e inconvenientes del modelo en cascada. Es un modelo sencillo de entender, tambi\u00e9n el m\u00e1s antiguo, pero se adapta mal al cambio en las especificaciones. \u00bfQu\u00e9 se entiende por verificaci\u00f3n? \u00bfY por validaci\u00f3n? Por verificaci\u00f3n se entiende que hay que saber si el producto se est\u00e1 desarrollando correctamente. La validaci\u00f3n comprueba si se est\u00e1 desarrolando. Explica como funciona el modelo de desarrollo mediante creaci\u00f3n de prototipos. Se crea un prototipo durante la fase de an\u00e1lisis. El cliente lo prueba y se refinan los requisitos. Esto se repite las veces que sean necesarias.","title":"Ejercicios 1"},{"location":"Ejercicios1/#ejercicios-1","text":"Define \"Ciclo de vida del software\". Es la disciplina que estudia los principios y m\u00e9todos de desarrollo y mantenimiento de software. Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas. An\u00e1lisis. Se determinan las necesidades del cliente y se especifican los requisitos que debe cumplir el software. Dise\u00f1o. Se organiza el sistema en elementos componentes que pueden desarrollarse por separado. Codificaci\u00f3n. Se escribe el c\u00f3digo fuente de cada componente. Pruebas. Se intenta forzar el programa a funcionar mal para descubrir los defectos. Mantenimiento. Durante la explotaci\u00f3n del sistema, es necesario realizar cambios ocasionales, para ello hay que rehacer parte del trabajo previo. Explica brevemente en qu\u00e9 consiste el modelo en cascada cuando hablamos de desarrollo de sofware. Es un modelo en el que las fases se realizan en el orden indicado, por lo que al terminar una, se pasa a la siguiente. Ventajas e inconvenientes del modelo en cascada. Es un modelo sencillo de entender, tambi\u00e9n el m\u00e1s antiguo, pero se adapta mal al cambio en las especificaciones. \u00bfQu\u00e9 se entiende por verificaci\u00f3n? \u00bfY por validaci\u00f3n? Por verificaci\u00f3n se entiende que hay que saber si el producto se est\u00e1 desarrollando correctamente. La validaci\u00f3n comprueba si se est\u00e1 desarrolando. Explica como funciona el modelo de desarrollo mediante creaci\u00f3n de prototipos. Se crea un prototipo durante la fase de an\u00e1lisis. El cliente lo prueba y se refinan los requisitos. Esto se repite las veces que sean necesarias.","title":"EJERCICIOS 1"},{"location":"Ejercicios2/","text":"EJERCICIOS 2 (22/9/22) 1. KANBAN. Haz un resumen de la metodolog\u00eda Kanban e indica sus diferencias frente a SCRUM. Kanban implementa un sistema de tarjetas con las cuales se asignan las tareas a los trabajadores mediante una pizarra con tareas. Est\u00e1 enfocado a entregar el m\u00e1ximo valor a los clientes utilizando los recursos justos. La gran diferencia entre Kanban y SCRUM es que Kanban utiliza metodolog\u00e1s m\u00e1s cont\u00ednuas y fluidas, mientras que SCRUM se basa en sprints de trabajos cortos y estructurados. 2. SCRUM. Explica como funciona Scrum. En Scrum, un proyecto se ejecuta en ciclos temporales y cortos de duraci\u00f3n fija. Cada iteraci\u00f3n tiene que proporcionar un resultado completo, un incremento del producto final que pueda ser entregado con el m\u00ednimo esfuerzo cuando el cliente lo solicite. 3. SCRUM. Define los siguientes t\u00e9rminos: Product backlog: Es un listado de todas las tareas que hay que realizar de un proyecto. Sprint backlog: Es una lista de todas las tareas a realizar durante un sprint. 4. SCRUM. En la terminolog\u00eda Scrum qu\u00e9 terminos se utilizan como sin\u00f3nimo de: Jefe de proyecto: Scrum Master. Cliente: Product Owner. Equipo de desarrollo: Development Team. 5.SCRUM. Haz un resumen de los requisitos para poder utilizar Scrum. Se necesita: - Una cultura de la empresa basada en el trabajo en equipo. - Compromiso del cliente en la direcci\u00f3n de los resultados del proyecto y disponibilidad para poder colaborar. - Compromiso de la direcci\u00f3n para resolver problemas. - Facilidad para hacer cambios en el proyecto. 6. XP. Explica los 5 valores de la Programaci\u00f3n Extrema. Simplicidad. En el c\u00f3digo. Comunicaci\u00f3n. Con los compa\u00f1eros de trabajo. Retroalimentac\u00f3n. Valent\u00eda o coraje. Para poder hablar de los defectos en los programas de los dem\u00e1s. Respeto o humildad. Ante las posibles quejas del resto del equipo y para facilitar el trabajo. 7. XP. \u00bfCu\u00e1les son las caracter\u00edsticas distintivas de XP frente a otras metodolog\u00edas \u00e1giles? Expl\u00edcalas. El juego de planificaci\u00f3n. Es un di\u00e1logo entre las partes empresarial y t\u00e9cnica. Peque\u00f1as entregas. Cada entrega debe ser peque\u00f1a, contentiendo lo m\u00e1s importante para el cliente. Dise\u00f1o sencillo. Los programas deben hacerse de la forma m\u00e1s simple posible sin perder funcionalidad (recodificar). Con esto preparamos el programa ante futuros cambios. Pruebas. No debe existir ninguna caracter\u00edstica que no haya sido probada. Programaci\u00f3n por parejas. Todo el c\u00f3digo lo escriben 2 personas frente al ordenador. Uno planea el c\u00f3digo en papel y el otro lo escribe. Cliente en casa. El cliente debe poder estar con el equipo de programadores. As\u00ed puede estar disponible para responder a sus preguntas.","title":"Ejercicios 2"},{"location":"Ejercicios2/#ejercicios-2-22922","text":"","title":"EJERCICIOS 2 (22/9/22)"},{"location":"Ejercicios2/#1-kanban-haz-un-resumen-de-la-metodologia-kanban-e-indica-sus-diferencias-frente-a-scrum","text":"Kanban implementa un sistema de tarjetas con las cuales se asignan las tareas a los trabajadores mediante una pizarra con tareas. Est\u00e1 enfocado a entregar el m\u00e1ximo valor a los clientes utilizando los recursos justos. La gran diferencia entre Kanban y SCRUM es que Kanban utiliza metodolog\u00e1s m\u00e1s cont\u00ednuas y fluidas, mientras que SCRUM se basa en sprints de trabajos cortos y estructurados.","title":"1. KANBAN. Haz un resumen de la metodolog\u00eda Kanban e indica sus diferencias frente a SCRUM."},{"location":"Ejercicios2/#2-scrum-explica-como-funciona-scrum","text":"En Scrum, un proyecto se ejecuta en ciclos temporales y cortos de duraci\u00f3n fija. Cada iteraci\u00f3n tiene que proporcionar un resultado completo, un incremento del producto final que pueda ser entregado con el m\u00ednimo esfuerzo cuando el cliente lo solicite.","title":"2. SCRUM. Explica como funciona Scrum."},{"location":"Ejercicios2/#3-scrum-define-los-siguientes-terminos","text":"Product backlog: Es un listado de todas las tareas que hay que realizar de un proyecto. Sprint backlog: Es una lista de todas las tareas a realizar durante un sprint.","title":"3. SCRUM. Define los siguientes t\u00e9rminos:"},{"location":"Ejercicios2/#4-scrum-en-la-terminologia-scrum-que-terminos-se-utilizan-como-sinonimo-de","text":"Jefe de proyecto: Scrum Master. Cliente: Product Owner. Equipo de desarrollo: Development Team.","title":"4. SCRUM. En la terminolog\u00eda Scrum qu\u00e9 terminos se utilizan como sin\u00f3nimo de:"},{"location":"Ejercicios2/#5scrum-haz-un-resumen-de-los-requisitos-para-poder-utilizar-scrum","text":"Se necesita: - Una cultura de la empresa basada en el trabajo en equipo. - Compromiso del cliente en la direcci\u00f3n de los resultados del proyecto y disponibilidad para poder colaborar. - Compromiso de la direcci\u00f3n para resolver problemas. - Facilidad para hacer cambios en el proyecto.","title":"5.SCRUM. Haz un resumen de los requisitos para poder utilizar Scrum."},{"location":"Ejercicios2/#6-xp-explica-los-5-valores-de-la-programacion-extrema","text":"Simplicidad. En el c\u00f3digo. Comunicaci\u00f3n. Con los compa\u00f1eros de trabajo. Retroalimentac\u00f3n. Valent\u00eda o coraje. Para poder hablar de los defectos en los programas de los dem\u00e1s. Respeto o humildad. Ante las posibles quejas del resto del equipo y para facilitar el trabajo.","title":"6. XP. Explica los 5 valores de la Programaci\u00f3n Extrema."},{"location":"Ejercicios2/#7-xp-cuales-son-las-caracteristicas-distintivas-de-xp-frente-a-otras-metodologias-agiles-explicalas","text":"El juego de planificaci\u00f3n. Es un di\u00e1logo entre las partes empresarial y t\u00e9cnica. Peque\u00f1as entregas. Cada entrega debe ser peque\u00f1a, contentiendo lo m\u00e1s importante para el cliente. Dise\u00f1o sencillo. Los programas deben hacerse de la forma m\u00e1s simple posible sin perder funcionalidad (recodificar). Con esto preparamos el programa ante futuros cambios. Pruebas. No debe existir ninguna caracter\u00edstica que no haya sido probada. Programaci\u00f3n por parejas. Todo el c\u00f3digo lo escriben 2 personas frente al ordenador. Uno planea el c\u00f3digo en papel y el otro lo escribe. Cliente en casa. El cliente debe poder estar con el equipo de programadores. As\u00ed puede estar disponible para responder a sus preguntas.","title":"7. XP. \u00bfCu\u00e1les son las caracter\u00edsticas distintivas de XP frente a otras metodolog\u00edas \u00e1giles? Expl\u00edcalas."},{"location":"Ejercicios3/","text":"EJERCICIOS 3 1. \u00bfQue diferencia existe entre los lenguajes declarativos y los imperativos? Nombra al menos 2 de cada tipo. - Imperativos: Es un lenguaje que se escribe como una serie de \u00f3rdenes a realizar. JavaScript, Python. - Declarativos: Se especifica el resultado, no c\u00f3mo lograrlo. SQL, HTML. 2. Explica qu\u00e9 es compilar. Explica qu\u00e9 es interpretar. - Compilar: Es cuando un programa en lenguaje de alto nivel se traduce a lenguaje de m\u00e1quina. - Interpretar: Es cuando el programa ejecuta las instrucciones directamente sin una previa compilaci\u00f3n del programa. 3. Ventajas de los lenguajes compilados: Se ejecutan muy eficientemente. 4. Ventaja de los leguajes interpretados. El c\u00f3digo fuente se interpreta directamente. 5. Nombra 2 lenguajes compilados y otros 2 interpretados. - Compilados: C++, Java. - Interpretados: PHP, Python. 6. \u00bfPuede considerarse c\u00f3digo objeto el bytecoe generado en Java tras la compilaci\u00f3n? Explica la respuesta. Si, pero solo destinado a la m\u00e1quina virtual de Java,Despu\u00e9s este bytecode se interpreta para ejecutarlo. 7. Pon un ejemplo de lenguaje de los siguientes tipos: - Bajo nivel: ensamblador - Nivel medio: C - Alto nivel: C++ 8. \u00bfQu\u00e9 paradigma de programaci\u00f3n siguen los siguientes lenguajes? -C Estructurada -C++ Gen\u00e9rica y orientada a objetos -SQL Multiparadigma -Java Orientado a objetos, imperativo. -Javascript Multiparadigma. -Lisp Multiparadigma funcional por procedimientos -Prolog L\u00f3gico. 9. Explica qu\u00e9 criterios pueden seguirse a la hora de elegir un lenguaje de proramaci\u00f3n para el desarrollo de software. - Dependiendo del campo de la aplicaci\u00f3n puede ser mejor un lenguaje que otro. - Tu experiencia previa con ese lenguaje tambi\u00e9n es un factor determinante. - Si tiene m\u00e1s herramientas de desarrollo, mejor. - Si tiene m\u00e1s documentaci\u00f3n, es mejor, si surge alguna duda, se puede buscar con mayor facilidad. - Una base de usuarios extensa garantiza la posibilidad de obtener ayuda de otros usuarios. - Si el programa se puede reutilizar. - Si se puede mover el programa. - Si el cliente elige un lenguaje predeterminado.","title":"Ejercicios 3"},{"location":"Ejercicios3/#ejercicios-3","text":"","title":"EJERCICIOS 3"},{"location":"Ejercicios3/#1-que-diferencia-existe-entre-los-lenguajes-declarativos-y-los-imperativos-nombra-al-menos-2-de-cada-tipo","text":"- Imperativos: Es un lenguaje que se escribe como una serie de \u00f3rdenes a realizar. JavaScript, Python. - Declarativos: Se especifica el resultado, no c\u00f3mo lograrlo. SQL, HTML.","title":"1. \u00bfQue diferencia existe entre los lenguajes declarativos y los imperativos? Nombra al menos 2 de cada tipo."},{"location":"Ejercicios3/#2-explica-que-es-compilar-explica-que-es-interpretar","text":"- Compilar: Es cuando un programa en lenguaje de alto nivel se traduce a lenguaje de m\u00e1quina. - Interpretar: Es cuando el programa ejecuta las instrucciones directamente sin una previa compilaci\u00f3n del programa.","title":"2. Explica qu\u00e9 es compilar. Explica qu\u00e9 es interpretar."},{"location":"Ejercicios3/#3-ventajas-de-los-lenguajes-compilados","text":"Se ejecutan muy eficientemente.","title":"3. Ventajas de los lenguajes compilados:"},{"location":"Ejercicios3/#4-ventaja-de-los-leguajes-interpretados","text":"El c\u00f3digo fuente se interpreta directamente.","title":"4. Ventaja de los leguajes interpretados."},{"location":"Ejercicios3/#5-nombra-2-lenguajes-compilados-y-otros-2-interpretados","text":"- Compilados: C++, Java. - Interpretados: PHP, Python.","title":"5. Nombra 2 lenguajes compilados y otros 2 interpretados."},{"location":"Ejercicios3/#6-puede-considerarse-codigo-objeto-el-bytecoe-generado-en-java-tras-la-compilacion-explica-la-respuesta","text":"Si, pero solo destinado a la m\u00e1quina virtual de Java,Despu\u00e9s este bytecode se interpreta para ejecutarlo.","title":"6. \u00bfPuede considerarse c\u00f3digo objeto el bytecoe generado en Java tras la compilaci\u00f3n? Explica la respuesta."},{"location":"Ejercicios3/#7-pon-un-ejemplo-de-lenguaje-de-los-siguientes-tipos","text":"- Bajo nivel: ensamblador - Nivel medio: C - Alto nivel: C++","title":"7. Pon un ejemplo de lenguaje de los siguientes tipos:"},{"location":"Ejercicios3/#8-que-paradigma-de-programacion-siguen-los-siguientes-lenguajes","text":"-C Estructurada -C++ Gen\u00e9rica y orientada a objetos -SQL Multiparadigma -Java Orientado a objetos, imperativo. -Javascript Multiparadigma. -Lisp Multiparadigma funcional por procedimientos -Prolog L\u00f3gico.","title":"8. \u00bfQu\u00e9 paradigma de programaci\u00f3n siguen los siguientes lenguajes?"},{"location":"Ejercicios3/#9-explica-que-criterios-pueden-seguirse-a-la-hora-de-elegir-un-lenguaje-de-proramacion-para-el-desarrollo-de-software","text":"- Dependiendo del campo de la aplicaci\u00f3n puede ser mejor un lenguaje que otro. - Tu experiencia previa con ese lenguaje tambi\u00e9n es un factor determinante. - Si tiene m\u00e1s herramientas de desarrollo, mejor. - Si tiene m\u00e1s documentaci\u00f3n, es mejor, si surge alguna duda, se puede buscar con mayor facilidad. - Una base de usuarios extensa garantiza la posibilidad de obtener ayuda de otros usuarios. - Si el programa se puede reutilizar. - Si se puede mover el programa. - Si el cliente elige un lenguaje predeterminado.","title":"9. Explica qu\u00e9 criterios pueden seguirse a la hora de elegir un lenguaje de proramaci\u00f3n para el desarrollo de software."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/","text":"EJERCICIOS 4 1. Ejecuta el programa \"Hola mundo\" en los siguientes lenguajes: bash #!/bin/bash echo \"Hello World\" exit 0 python print(\"Hello World\") php <?php echo \"Hello World\"; ?> javascript <script> alert('Hello World'); </script> c #include <stdio.h> int main(){ printf(\"Hello World\"); return 0; } c++ #include <iostream> int main(){ cout<<\"Hello World\"; return 0; } java class HelloWorld { public static void main(string[] args){ System.out.println(\"Hello World\"); } } ruby Archivo: hello_world.ruby puts \"Hello World\" go package main import \"fmt\" func main(){ fmt.println(\"Hello World\") } Terminal $ go run hello-world.go $ go build hello-world.go $ ls $ ./hello-world rust fn main(){ println!(\"Hello World); } lisp (format t \"Hello, World!\") ensamblador (nasm) C\u00f3digo fuente: SECTION .DATA hello: db 'Hello world!',10 helloLen: equ $-hello SECTION .TEXT GLOBAL _start _start: mov eax,4 ; 'write' system call = 4 mov ebx,1 ; file descriptor 1 = STDOUT mov ecx,hello ; string to write mov edx,helloLen ; length of string to write int 80h ; call the kernel mov eax,1 ; 'exit' system call mov ebx,0 ; exit with error code 0 int 80h ; call the kernel Compilaci\u00f3n: #Compilaci\u00f3n nasm -f elf64 hola.asm -o hola.o #Enlace ld hola.o -o hola #Ejecuci\u00f3n ./hola 2. Para cada uno de los lenguajes anteriores, indica el proceso realizado para conseguir ejecutar el c\u00f3digo: \u00bfcompilaci\u00f3n o interpretaci\u00f3n? bash: interpretado python: interpretado php: interpretado javascript (nodejs): interpretado c: compilado c++: compilado java: compilado ruby: interpretado go: compilado rust: compilado lisp: interpretado 3. Para cada uno de los lenguajes anteriores, indica el nombre del compilador o interprete utilizado en GNU/Linux. bash: Terminal/Consola python: python IDE php: php javascript (nodejs): java c: gcc c++: gcc java: jdk ruby: yarv go: go rust: rustc lisp: lisp 4. Investiga y averigua que extensi\u00f3n tienen los archivos de c\u00f3digo fuente de los siguientes lenguajes: bash: .sh python: .py php: .php javascript: .js c: .c c++: .C java: .java ensamblador: .ASM ruby: .ruby go: .GO rust: .rs lisp: .lsp 5. Scripts ejecutables para los lenguajes interpretados. Edita los scripts para los siguientes lenguajes: bash: python: php: javascript: java: ruby: go: rust: lisp: Ya est\u00e1 hecho en Ej 1 6. \u00bfQu\u00e9 extensi\u00f3n tienen los archivos de c\u00f3digo objeto? .obj 7. Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo objeto a partir del c\u00f3digo fuente de los 3 archivos siguientes: 8. Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo binario ejecutable a partir del c\u00f3digo objeto de los 3 archivos anteriores: 9. Lenguaje C++. C\u00f3digo en varios archivos. Obtener el c\u00f3digo objeto a partir del c\u00f3digo fuente de los 3 archivos siguientes: 10. Lenguaje C++. C\u00f3digo en varios archivos. Obtener el c\u00f3digo binario ejecutable a partir del c\u00f3digo objeto de los 3 archivos anteriores: 11. Bibliotecas. Define que se entiende por biblioteca o librer\u00eda y los tipos que existen. Son un conjunto de archivos que se utiliza para desarrollar software. Su fin es ser utilizada por otros programas de forma aut\u00f3noma. 12. Bibliotecas. \u00bfQu\u00e9 tipo es el m\u00e1s utilizado actualmente? \u00bfPor qu\u00e9? Las bibliotecas din\u00e1micas porque son menos pesadas y el programa se beneficia de sus actualizaciones. 13. Bibliotecas. Crea una biblioteca din\u00e1mica en C que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. Creamos el archivo aritmetica.c con el siguiente c\u00f3digo: #include <stdio.h> #include <stdlib.h> int suma (int a, int b){ return a+b; } int resta (int a, int b){ return a-b; } int multiplicar (int a, int b){ return a*b; } int dividir (int a, int b){ return a/b; } Convertimos a libreria: 14. Bibliotecas. Crea una biblioteca din\u00e1mica en Java que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. Creamos el archivo aritmetica.java con el siguiente c\u00f3digo: public class aritmetica{ \u200b public int suma(int a, int b){ \u200b return a+b; \u200b } \u200b public int resta(int a, int b){ \u200b return a-b; \u200b } \u200b public int multiplicar(int a, int b){ \u200b return a*b; \u200b } \u200b public int dividir(int a, int b){ \u200b return a/b; \u200b } } Convertimos a librer\u00eda: 15. Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas est\u00e1ticas. Las bibliotecas est\u00e1ticas dan la seguridad de que todas las dependencias est\u00e1n en la aplicaci\u00f3n y con su versi\u00f3n correcta. Esto evita problemas de dependencia. Tambi\u00e9n permite que la aplicaci\u00f3n se contenga dentro de un solo archivo ejecutable, simplificando la distribuci\u00f3n y la instalaci\u00f3n. Las est\u00e1ticas son m\u00e1s eficientes que las din\u00e1micas, pues solo se cargan las bibliotecas necesarias y no todas. Algunas desventajas de las est\u00e1ticas es que al almacenarse dentro del ejecutable, este se vuelve m\u00e1s pesado. 16. Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas din\u00e1micas. Ahorra m\u00e1s memoria, el archivo so es independiente del archivo EXE, es adecuado para el desarrollo de software a gran escala, lo que hace que el proceso sea independiente y menos acoplado. El archivo ejecutable generado es de gran tama\u00f1o y contiene el mismo c\u00f3digo com\u00fan. 17. Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo ejecutable para c\u00f3digo fuente en C con make. Haz uso de un buildfile. 19. Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Maven. Haz uso de un buildfile. 20. Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Gradle. Haz uso de un buildfile.","title":"Herramientas de desarrollo"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#ejercicios-4","text":"","title":"EJERCICIOS 4"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#1-ejecuta-el-programa-hola-mundo-en-los-siguientes-lenguajes","text":"","title":"1. Ejecuta el programa \"Hola mundo\" en los siguientes lenguajes:"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#bash","text":"#!/bin/bash echo \"Hello World\" exit 0","title":"bash"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#python","text":"print(\"Hello World\")","title":"python"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#php","text":"<?php echo \"Hello World\"; ?>","title":"php"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#javascript","text":"<script> alert('Hello World'); </script>","title":"javascript"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#c","text":"#include <stdio.h> int main(){ printf(\"Hello World\"); return 0; }","title":"c"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#c_1","text":"#include <iostream> int main(){ cout<<\"Hello World\"; return 0; }","title":"c++"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#java","text":"class HelloWorld { public static void main(string[] args){ System.out.println(\"Hello World\"); } }","title":"java"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#ruby","text":"Archivo: hello_world.ruby puts \"Hello World\"","title":"ruby"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#go","text":"package main import \"fmt\" func main(){ fmt.println(\"Hello World\") } Terminal $ go run hello-world.go $ go build hello-world.go $ ls $ ./hello-world","title":"go"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#rust","text":"fn main(){ println!(\"Hello World); }","title":"rust"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#lisp","text":"(format t \"Hello, World!\")","title":"lisp"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#ensamblador-nasm","text":"C\u00f3digo fuente: SECTION .DATA hello: db 'Hello world!',10 helloLen: equ $-hello SECTION .TEXT GLOBAL _start _start: mov eax,4 ; 'write' system call = 4 mov ebx,1 ; file descriptor 1 = STDOUT mov ecx,hello ; string to write mov edx,helloLen ; length of string to write int 80h ; call the kernel mov eax,1 ; 'exit' system call mov ebx,0 ; exit with error code 0 int 80h ; call the kernel Compilaci\u00f3n: #Compilaci\u00f3n nasm -f elf64 hola.asm -o hola.o #Enlace ld hola.o -o hola #Ejecuci\u00f3n ./hola","title":"ensamblador (nasm)"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#2-para-cada-uno-de-los-lenguajes-anteriores-indica-el-proceso-realizado-para-conseguir-ejecutar-el-codigo-compilacion-o-interpretacion","text":"bash: interpretado python: interpretado php: interpretado javascript (nodejs): interpretado c: compilado c++: compilado java: compilado ruby: interpretado go: compilado rust: compilado lisp: interpretado","title":"2. Para cada uno de los lenguajes anteriores, indica el proceso realizado para conseguir ejecutar el c\u00f3digo: \u00bfcompilaci\u00f3n o interpretaci\u00f3n?"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#3-para-cada-uno-de-los-lenguajes-anteriores-indica-el-nombre-del-compilador-o-interprete-utilizado-en-gnulinux","text":"bash: Terminal/Consola python: python IDE php: php javascript (nodejs): java c: gcc c++: gcc java: jdk ruby: yarv go: go rust: rustc lisp: lisp","title":"3. Para cada uno de los lenguajes anteriores, indica el nombre del compilador o interprete utilizado en GNU/Linux."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#4-investiga-y-averigua-que-extension-tienen-los-archivos-de-codigo-fuente-de-los-siguientes-lenguajes","text":"bash: .sh python: .py php: .php javascript: .js c: .c c++: .C java: .java ensamblador: .ASM ruby: .ruby go: .GO rust: .rs lisp: .lsp","title":"4. Investiga y averigua que extensi\u00f3n tienen los archivos de c\u00f3digo fuente de los siguientes lenguajes:"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#5-scripts-ejecutables-para-los-lenguajes-interpretados-edita-los-scripts-para-los-siguientes-lenguajes","text":"bash: python: php: javascript: java: ruby: go: rust: lisp: Ya est\u00e1 hecho en Ej 1","title":"5. Scripts ejecutables para los lenguajes interpretados. Edita los scripts para los siguientes lenguajes:"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#6-que-extension-tienen-los-archivos-de-codigo-objeto","text":".obj","title":"6. \u00bfQu\u00e9 extensi\u00f3n tienen los archivos de c\u00f3digo objeto?"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#7-lenguaje-c-codigo-en-varios-archivos-obtener-el-codigo-objeto-a-partir-del-codigo-fuente-de-los-3-archivos-siguientes","text":"","title":"7. Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo objeto a partir del c\u00f3digo fuente de los 3 archivos siguientes:"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#8-lenguaje-c-codigo-en-varios-archivos-obtener-el-codigo-binario-ejecutable-a-partir-del-codigo-objeto-de-los-3-archivos-anteriores","text":"","title":"8. Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo binario ejecutable a partir del c\u00f3digo objeto de los 3 archivos anteriores:"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#9-lenguaje-c-codigo-en-varios-archivos-obtener-el-codigo-objeto-a-partir-del-codigo-fuente-de-los-3-archivos-siguientes","text":"","title":"9. Lenguaje C++. C\u00f3digo en varios archivos. Obtener el c\u00f3digo objeto a partir del c\u00f3digo fuente de los 3 archivos siguientes:"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#10-lenguaje-c-codigo-en-varios-archivos-obtener-el-codigo-binario-ejecutable-a-partir-del-codigo-objeto-de-los-3-archivos-anteriores","text":"","title":"10. Lenguaje C++. C\u00f3digo en varios archivos. Obtener el c\u00f3digo binario ejecutable a partir del c\u00f3digo objeto de los 3 archivos anteriores:"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#11-bibliotecas-define-que-se-entiende-por-biblioteca-o-libreria-y-los-tipos-que-existen","text":"Son un conjunto de archivos que se utiliza para desarrollar software. Su fin es ser utilizada por otros programas de forma aut\u00f3noma.","title":"11. Bibliotecas. Define que se entiende por biblioteca o librer\u00eda y los tipos que existen."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#12-bibliotecas-que-tipo-es-el-mas-utilizado-actualmente-por-que","text":"Las bibliotecas din\u00e1micas porque son menos pesadas y el programa se beneficia de sus actualizaciones.","title":"12. Bibliotecas. \u00bfQu\u00e9 tipo es el m\u00e1s utilizado actualmente? \u00bfPor qu\u00e9?"},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#13-bibliotecas-crea-una-biblioteca-dinamica-en-c-que-proporcione-las-funciones-para-sumar-restar-multiplicar-y-dividir-2-numeros-enteros-crea-un-programa-que-haga-uso-de-ella-y-comprueba-que-se-ejecuta-correctamente","text":"Creamos el archivo aritmetica.c con el siguiente c\u00f3digo: #include <stdio.h> #include <stdlib.h> int suma (int a, int b){ return a+b; } int resta (int a, int b){ return a-b; } int multiplicar (int a, int b){ return a*b; } int dividir (int a, int b){ return a/b; } Convertimos a libreria:","title":"13. Bibliotecas. Crea una biblioteca din\u00e1mica en C que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#14-bibliotecas-crea-una-biblioteca-dinamica-en-java-que-proporcione-las-funciones-para-sumar-restar-multiplicar-y-dividir-2-numeros-enteros-crea-un-programa-que-haga-uso-de-ella-y-comprueba-que-se-ejecuta-correctamente","text":"Creamos el archivo aritmetica.java con el siguiente c\u00f3digo: public class aritmetica{ \u200b public int suma(int a, int b){ \u200b return a+b; \u200b } \u200b public int resta(int a, int b){ \u200b return a-b; \u200b } \u200b public int multiplicar(int a, int b){ \u200b return a*b; \u200b } \u200b public int dividir(int a, int b){ \u200b return a/b; \u200b } } Convertimos a librer\u00eda:","title":"14. Bibliotecas. Crea una biblioteca din\u00e1mica en Java que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#15-bibliotecas-busca-informacion-y-explica-las-ventajas-y-desventajas-de-usar-bibliotecas-estaticas","text":"Las bibliotecas est\u00e1ticas dan la seguridad de que todas las dependencias est\u00e1n en la aplicaci\u00f3n y con su versi\u00f3n correcta. Esto evita problemas de dependencia. Tambi\u00e9n permite que la aplicaci\u00f3n se contenga dentro de un solo archivo ejecutable, simplificando la distribuci\u00f3n y la instalaci\u00f3n. Las est\u00e1ticas son m\u00e1s eficientes que las din\u00e1micas, pues solo se cargan las bibliotecas necesarias y no todas. Algunas desventajas de las est\u00e1ticas es que al almacenarse dentro del ejecutable, este se vuelve m\u00e1s pesado.","title":"15. Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas est\u00e1ticas."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#16-bibliotecas-busca-informacion-y-explica-las-ventajas-y-desventajas-de-usar-bibliotecas-dinamicas","text":"Ahorra m\u00e1s memoria, el archivo so es independiente del archivo EXE, es adecuado para el desarrollo de software a gran escala, lo que hace que el proceso sea independiente y menos acoplado. El archivo ejecutable generado es de gran tama\u00f1o y contiene el mismo c\u00f3digo com\u00fan.","title":"16. Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas din\u00e1micas."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#17-build-automatiza-el-proceso-de-compilacion-de-ejecutable-y-biblioteca-su-enlazado-y-la-generacion-del-archivo-ejecutable-para-codigo-fuente-en-c-con-make-haz-uso-de-un-buildfile","text":"","title":"17. Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo ejecutable para c\u00f3digo fuente en C con make. Haz uso de un buildfile."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#19-build-automatiza-el-proceso-de-compilacion-de-ejecutable-y-biblioteca-su-enlazado-y-la-generacion-del-archivo-jar-para-codigo-fuente-en-java-con-maven-haz-uso-de-un-buildfile","text":"","title":"19. Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Maven. Haz uso de un buildfile."},{"location":"Ejercicios4%20%28Herramientas%20desarrollo%29/#20-build-automatiza-el-proceso-de-compilacion-de-ejecutable-y-biblioteca-su-enlazado-y-la-generacion-del-archivo-jar-para-codigo-fuente-en-java-con-gradle-haz-uso-de-un-buildfile","text":"","title":"20. Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Gradle. Haz uso de un buildfile."},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/","text":"Ejercicios 5 1. Instala el editor sublime text. Saca una captura de pantalla una vez instalado. 2. Personaliza Sublime text instalando los complementos m\u00e1s importantes. 3. \u00bfPara que sirve el complemento Emmet ? Haz uso de \u00e9l al escribir un archivo html de prueba. El complemento Emmet sirve para escribir expresiones abreviadas en html que despu\u00e9s se expanden en un c\u00f3digo html normal, por ejemplo: Al escribir ul#nav>li.item$*4>a{Item $} queremos que se abra una lista con id nav y que esta lista tenga 4 elementos con el nombre \"Item\" y posteriormente el n\u00famero que corresponda. Al expandirlo, queda as\u00ed el programa: 4. Instala el editor Visual Studio Code. Saca una captura de pantalla una vez instalado y funcionando. En mi caso no es el VSCode, es el VSCodium, es el que uso normalmente. Aun as\u00ed es una copia de VSCode, la instalaci\u00f3n es igual. Adem\u00e1s, tengo un plugin instalado para cambiar su aspecto visual. 5. Haz una comparativa de la funcionalidad ofrecida por Sublime text y la ofrecida por Visual Studio Code referente a los siguientes aspectos: Terminal integrado: \u200b VSC tiene un terminal integrado, Sublime Text, en cambio, no tiene ninguno. Emmet incorporado: \u200b VSC tiene Emmet incorporado, su forma de uso es mucho m\u00e1s r\u00e1pida y simple, en cambio, con Sublime Text hay que instalarlo y configurarlo si no est\u00e1 a tu gusto. Iconos para los tipos de archivos: \u200b VSC tiene iconos para cada tipo de archivo que puedas escribir en un proyecto, Sublime Text no tiene ninguno. Atajo de teclas para comentar: \u200b Solo VSC tiene atajo de teclas para comentar, lo que lo hace m\u00e1s c\u00f3modo. Atajo de teclas para buscar y seleccionar: \u200b Ambos editores tienen atajos para buscar y seleccionar con Ctrl + F, son bastante parecidos. 6. \u00bfQu\u00e9 paquetes b\u00e1sicos debemos instalar en Ubuntu para desarrollar en Java? Para desarrollar Java en Ubuntu o cualquier sistema operativo se necesita el JDK (Java Development Kit). 7. Instala el entorno integrado Netbeans. Saca una captura de pantalla una vez instalado y funcionando.","title":"Entornos de desarrollo integrado"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#ejercicios-5","text":"","title":"Ejercicios 5"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#1-instala-el-editor-sublime-text-saca-una-captura-de-pantalla-una-vez-instalado","text":"","title":"1. Instala el editor sublime text. Saca una captura de pantalla una vez instalado."},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#2-personaliza-sublime-text-instalando-los-complementos-mas-importantes","text":"","title":"2. Personaliza Sublime text instalando los complementos m\u00e1s importantes."},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#_1","text":"","title":""},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#_2","text":"","title":""},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#_3","text":"","title":""},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#_4","text":"","title":""},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#_5","text":"","title":""},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#3-para-que-sirve-el-complemento-emmet-haz-uso-de-el-al-escribir-un-archivo-html-de-prueba","text":"El complemento Emmet sirve para escribir expresiones abreviadas en html que despu\u00e9s se expanden en un c\u00f3digo html normal, por ejemplo: Al escribir ul#nav>li.item$*4>a{Item $} queremos que se abra una lista con id nav y que esta lista tenga 4 elementos con el nombre \"Item\" y posteriormente el n\u00famero que corresponda. Al expandirlo, queda as\u00ed el programa:","title":"3. \u00bfPara que sirve el complemento Emmet? Haz uso de \u00e9l al escribir un archivo html de prueba."},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#4-instala-el-editor-visual-studio-code-saca-una-captura-de-pantalla-una-vez-instalado-y-funcionando","text":"En mi caso no es el VSCode, es el VSCodium, es el que uso normalmente. Aun as\u00ed es una copia de VSCode, la instalaci\u00f3n es igual. Adem\u00e1s, tengo un plugin instalado para cambiar su aspecto visual.","title":"4. Instala el editor Visual Studio Code. Saca una captura de pantalla una vez instalado y funcionando."},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#5-haz-una-comparativa-de-la-funcionalidad-ofrecida-por-sublime-text-y-la-ofrecida-por-visual-studio-code-referente-a-los-siguientes-aspectos","text":"","title":"5. Haz una comparativa de la funcionalidad ofrecida por Sublime text y la ofrecida por Visual Studio Code referente a los siguientes aspectos:"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#terminal-integrado","text":"\u200b VSC tiene un terminal integrado, Sublime Text, en cambio, no tiene ninguno.","title":"Terminal integrado:"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#emmet-incorporado","text":"\u200b VSC tiene Emmet incorporado, su forma de uso es mucho m\u00e1s r\u00e1pida y simple, en cambio, con Sublime Text hay que instalarlo y configurarlo si no est\u00e1 a tu gusto.","title":"Emmet incorporado:"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#iconos-para-los-tipos-de-archivos","text":"\u200b VSC tiene iconos para cada tipo de archivo que puedas escribir en un proyecto, Sublime Text no tiene ninguno.","title":"Iconos para los tipos de archivos:"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#atajo-de-teclas-para-comentar","text":"\u200b Solo VSC tiene atajo de teclas para comentar, lo que lo hace m\u00e1s c\u00f3modo.","title":"Atajo de teclas para comentar:"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#atajo-de-teclas-para-buscar-y-seleccionar","text":"\u200b Ambos editores tienen atajos para buscar y seleccionar con Ctrl + F, son bastante parecidos.","title":"Atajo de teclas para buscar y seleccionar:"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#6-que-paquetes-basicos-debemos-instalar-en-ubuntu-para-desarrollar-en-java","text":"Para desarrollar Java en Ubuntu o cualquier sistema operativo se necesita el JDK (Java Development Kit).","title":"6. \u00bfQu\u00e9 paquetes b\u00e1sicos debemos instalar en Ubuntu para desarrollar en Java?"},{"location":"Ejercicios5%20%28Entornos%20desarrollo%20integrado%29/#7-instala-el-entorno-integrado-netbeans-saca-una-captura-de-pantalla-una-vez-instalado-y-funcionando","text":"","title":"7. Instala el entorno integrado Netbeans. Saca una captura de pantalla una vez instalado y funcionando."},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/","text":"Ejercicios 6 Control de Versiones 1) Adem\u00e1s de Git, \u00bfque otros sistemas de control de versiones existen? CVS, Subversion, SourceSafe, ClearCase, Darcs, Bazaar, Plastic SCM, Mercurial, Perforce, FOssil SCM o Team Foundation Server. 2) En Git, \u00bfqu\u00e9 tres \u00e1reas existen? Confirmado (commited) Modificado (modified) Preparado (staged) 3) Busca en Internet un buen tutorial de GIT y real\u00edzalo. \u00bfDe qu\u00e9 tutorial se trata? Tutorial de GIT con Github 4) Visualiza el siguiente video y responde a las cuestiones que aparecen m\u00e1s abajo. https://www.youtube.com/watch?v=uR6G2v_WsRA 5) En Git, \u00bfpara qu\u00e9 sirve el comando git config ? Para ver todos los comandos. 6) En Git, \u00bfpara qu\u00e9 sirve el comando git init ? Para iniciar un repositorio. 7) En Git, \u00bfpara qu\u00e9 sirve el comando git clone ? Para clonar un repositorio de la nube al pc. 8) En Git, \u00bfpara qu\u00e9 sirve el comando git status ? Para saber si el repositorio remoto y el local est\u00e1n actualizados. 9) En Git, \u00bfpara qu\u00e9 sirve el comando git add ?","title":"Control de versiones"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#ejercicios-6-control-de-versiones","text":"","title":"Ejercicios 6 Control de Versiones"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#1-ademas-de-git-que-otros-sistemas-de-control-de-versiones-existen","text":"CVS, Subversion, SourceSafe, ClearCase, Darcs, Bazaar, Plastic SCM, Mercurial, Perforce, FOssil SCM o Team Foundation Server.","title":"1) Adem\u00e1s de Git, \u00bfque otros sistemas de control de versiones existen?"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#2-en-git-que-tres-areas-existen","text":"Confirmado (commited) Modificado (modified) Preparado (staged)","title":"2) En Git, \u00bfqu\u00e9 tres \u00e1reas existen?"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#3-busca-en-internet-un-buen-tutorial-de-git-y-realizalo-de-que-tutorial-se-trata","text":"Tutorial de GIT con Github","title":"3) Busca en Internet un buen tutorial de GIT y real\u00edzalo. \u00bfDe qu\u00e9 tutorial se trata?"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#4-visualiza-el-siguiente-video-y-responde-a-las-cuestiones-que-aparecen-mas-abajo","text":"https://www.youtube.com/watch?v=uR6G2v_WsRA","title":"4) Visualiza el siguiente video y responde a las cuestiones que aparecen m\u00e1s abajo."},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#5-en-git-para-que-sirve-el-comando-git-config","text":"Para ver todos los comandos.","title":"5) En Git, \u00bfpara qu\u00e9 sirve el comando git config?"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#6-en-git-para-que-sirve-el-comando-git-init","text":"Para iniciar un repositorio.","title":"6) En Git, \u00bfpara qu\u00e9 sirve el comando git init?"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#7-en-git-para-que-sirve-el-comando-git-clone","text":"Para clonar un repositorio de la nube al pc.","title":"7) En Git, \u00bfpara qu\u00e9 sirve el comando git clone?"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#8-en-git-para-que-sirve-el-comando-git-status","text":"Para saber si el repositorio remoto y el local est\u00e1n actualizados.","title":"8) En Git, \u00bfpara qu\u00e9 sirve el comando git status?"},{"location":"Ejercicios6%20%28Control%20de%20versiones%29/#9-en-git-para-que-sirve-el-comando-git-add","text":"","title":"9) En Git, \u00bfpara qu\u00e9 sirve el comando git add?"}]}